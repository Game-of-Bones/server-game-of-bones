/**
 * SEEDER DE COMENTARIOS - DESARROLLO
 *
 * Prop√≥sito:
 * - Crear comentarios de prueba en posts existentes
 * - Simular interacci√≥n de usuarios en el blog
 * - Datos variados para probar la funcionalidad de comentarios
 *
 * Requisitos previos:
 * - Usuarios deben existir (ejecutar 01-users primero)
 * - Posts deben existir (ejecutar 02-posts primero)
 *
 * Uso:
 * - npm run seed:dev
 */

import { Comment } from '../../models/Comment';
import { User } from '../../models/User';
import { Post } from '../../models/Post';

export const seedComments = async (): Promise<void> => {
  try {
    console.log('üí¨ Seeding comments (desarrollo)...');

    // Verificar que existen usuarios
    const users = await User.findAll();
    if (!users || users.length === 0) {
      console.log('‚ö†Ô∏è  No hay usuarios. Ejecuta el seeder de usuarios primero.');
      console.log('üí° Comando: npm run seed:dev');
      return;
    }

    // Verificar que existen posts
    const posts = await Post.findAll();
    if (!posts || posts.length === 0) {
      console.log('‚ö†Ô∏è  No hay posts. Ejecuta el seeder de posts primero.');
      console.log('üí° Comando: npm run seed:dev');
      return;
    }

    // Datos de comentarios variados para desarrollo
    const commentsData = [
      // Comentarios en el primer post (T-Rex)
      {
        content: '¬°Incre√≠ble descubrimiento! Me encanta la paleontolog√≠a. ¬øHay m√°s informaci√≥n sobre el estado de conservaci√≥n del cr√°neo?',
        user_id: users[1]?.id || users[0].id,
        post_id: posts[0].id,
      },
      {
        content: 'Fascinante. ¬øCu√°ndo estar√° disponible para visitar en el museo? Me gustar√≠a verlo en persona.',
        user_id: users[2]?.id || users[0].id,
        post_id: posts[0].id,
      },
      {
        content: 'Excelente trabajo del equipo de excavaci√≥n. La Patagonia siempre nos sorprende con estos hallazgos.',
        user_id: users[3]?.id || users[0].id,
        post_id: posts[0].id,
      },

      // Comentarios en el segundo post (Plantas del Sahara)
      {
        content: 'Muy interesante, gracias por compartir. ¬øQu√© especies de plantas se identificaron?',
        user_id: users[0].id,
        post_id: posts[1].id,
      },
      {
        content: 'Wow, no sab√≠a que el Sahara fue un ecosistema h√∫medo. La geolog√≠a es fascinante.',
        user_id: users[4]?.id || users[0].id,
        post_id: posts[1].id,
      },

      // Comentarios en el tercer post (Insectos en √°mbar)
      {
        content: 'El √°mbar b√°ltico es incre√≠ble para preservar detalles. ¬øHay fotos de mayor resoluci√≥n disponibles?',
        user_id: users[1]?.id || users[0].id,
        post_id: posts[2].id,
      },
      {
        content: '¬øEstos insectos tienen alguna relaci√≥n con especies actuales? Me gustar√≠a saber m√°s sobre la evoluci√≥n.',
        user_id: users[2]?.id || users[0].id,
        post_id: posts[2].id,
      },

      // Comentarios en el cuarto post (Huellas Utah)
      {
        content: 'Las huellas nos cuentan tanto sobre el comportamiento. ¬øSe encontraron huellas de cr√≠as tambi√©n?',
        user_id: users[3]?.id || users[0].id,
        post_id: posts[3].id,
      },

      // Comentarios en el quinto post (Trilobite)
      {
        content: 'Marruecos es un tesoro para la paleontolog√≠a. Hermoso ejemplar.',
        user_id: users[0].id,
        post_id: posts[4].id,
      },
      {
        content: '¬øCu√°l es el tama√±o aproximado de este trilobite? Se ve espectacular en la foto.',
        user_id: users[4]?.id || users[0].id,
        post_id: posts[4].id,
      },
    ];

    // Insertar comentarios en la base de datos
    const createdComments = await Comment.bulkCreate(commentsData);

    console.log(`‚úÖ ${createdComments.length} comentarios creados exitosamente`);
    console.log(`   üìä Distribuci√≥n por post:`);

    // Mostrar cu√°ntos comentarios tiene cada post
    const commentsByPost = createdComments.reduce((acc: any, comment) => {
      acc[comment.post_id] = (acc[comment.post_id] || 0) + 1;
      return acc;
    }, {});

    Object.entries(commentsByPost).forEach(([postId, count]) => {
      console.log(`      Post #${postId}: ${count} comentarios`);
    });

  } catch (error: any) {
    console.error('‚ùå Error seeding comments:', error.message);

    // Ayuda espec√≠fica si hay error de FK
    if (error.message.includes('foreign key constraint')) {
      console.log('\n‚ö†Ô∏è  ERROR: Los posts o usuarios referenciados no existen.');
      console.log('üí° Soluci√≥n: Ejecuta los seeders en orden:');
      console.log('   1. npm run seed:dev  (ejecuta todos en orden)');
    }

    throw error;
  }
};

export default seedComments;
